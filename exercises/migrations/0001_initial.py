# Generated by Django 4.2.6 on 2025-05-05 14:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('courses', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='测验标题')),
                ('description', models.TextField(blank=True, null=True, verbose_name='测验描述')),
                ('time_limit', models.PositiveIntegerField(default=0, help_text='分钟, 0表示不限时', verbose_name='时间限制')),
                ('pass_score', models.PositiveIntegerField(default=60, verbose_name='及格分数')),
                ('allow_multiple_attempts', models.BooleanField(default=True, verbose_name='允许多次尝试')),
                ('max_attempts', models.PositiveIntegerField(default=3, help_text='0表示不限制次数', verbose_name='最大尝试次数')),
                ('randomize_questions', models.BooleanField(default=False, verbose_name='随机题目顺序')),
                ('show_correct_answers', models.BooleanField(default=True, verbose_name='显示正确答案')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('lesson', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='quiz', to='courses.lesson', verbose_name='关联课时')),
            ],
            options={
                'verbose_name': '测验',
                'verbose_name_plural': '测验',
            },
        ),
        migrations.CreateModel(
            name='QuizAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True, verbose_name='开始时间')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='结束时间')),
                ('status', models.CharField(choices=[('in_progress', '进行中'), ('completed', '已完成'), ('timed_out', '超时')], default='in_progress', max_length=15, verbose_name='状态')),
                ('score', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='得分')),
                ('passed', models.BooleanField(default=False, verbose_name='是否通过')),
                ('attempt_number', models.PositiveIntegerField(default=1, verbose_name='尝试次数')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='exercises.quiz', verbose_name='测验')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_attempts', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '测验尝试',
                'verbose_name_plural': '测验尝试',
                'unique_together': {('user', 'quiz', 'attempt_number')},
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(verbose_name='问题文本')),
                ('question_type', models.CharField(choices=[('single_choice', '单选题'), ('multiple_choice', '多选题'), ('true_false', '判断题'), ('short_answer', '简答题')], max_length=20, verbose_name='问题类型')),
                ('points', models.PositiveIntegerField(default=1, verbose_name='分值')),
                ('explanation', models.TextField(blank=True, null=True, verbose_name='解释')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='排序')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='exercises.quiz', verbose_name='所属测验')),
            ],
            options={
                'verbose_name': '问题',
                'verbose_name_plural': '问题',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_text', models.CharField(max_length=255, verbose_name='选项文本')),
                ('is_correct', models.BooleanField(default=False, verbose_name='是否正确')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='exercises.question', verbose_name='所属问题')),
            ],
            options={
                'verbose_name': '选项',
                'verbose_name_plural': '选项',
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_answer', models.TextField(blank=True, null=True, verbose_name='文本答案')),
                ('is_correct', models.BooleanField(default=False, verbose_name='是否正确')),
                ('score', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='得分')),
                ('feedback', models.TextField(blank=True, null=True, verbose_name='反馈')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='exercises.question', verbose_name='问题')),
                ('quiz_attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='exercises.quizattempt', verbose_name='测验尝试')),
                ('selected_choices', models.ManyToManyField(blank=True, related_name='selected_in_answers', to='exercises.choice', verbose_name='选择的选项')),
            ],
            options={
                'verbose_name': '答案',
                'verbose_name_plural': '答案',
                'unique_together': {('quiz_attempt', 'question')},
            },
        ),
    ]
